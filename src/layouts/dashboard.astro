---
import BaseButton from "../components/BaseButton.astro";
import Bars from "../../public/icons/bars.svg?raw";

const paths: {
  name: string;
  link: string;
  subpaths?: {
    name: string;
    link: string;
    image: string;
    description?: string;
  }[];
}[] = [
  { name: "Home", link: "/" },
  { name: "Dashboard", link: "/dashboard" },
  { name: "Logout", link: "/logout" },
];

Astro.response.headers.set("Content-Type", "text/html; charset=utf-8");
---

<script>
  document
    .getElementById("burger-menu-button")
    ?.addEventListener("click", () => {
      openBurgerMenu();
    });

  // Add an event listener to the close button
  document
    .getElementById("close-dropdown-button")
    ?.addEventListener("click", () => {
      closeBurgerMenu();
    });

  const dropdown = document.getElementById("dropdown");
  const links = document.querySelectorAll(".link");

  function openBurgerMenu() {
    dropdown?.classList.remove("translate-x-full");
    dropdown?.classList.add("translate-x-0");
    for (const link of links) {
      link.classList.remove("translate-x-full");
      link.classList.add("translate-x-0");
    }
  }

  function closeBurgerMenu() {
    for (const link of links) {
      link.classList.remove("translate-x-0");
      link.classList.add("translate-x-full");
    }
    dropdown?.classList.remove("translate-x-0");
    dropdown?.classList.add("translate-x-full");
  }

  const solutionsSub = document.getElementById("solutions-sub");
  const solutionsSubItems = document.getElementById("solutions-sub-items");

  solutionsSub?.addEventListener("click", () => {
    for (const link of links) {
      if (link.id === "solutions-sub") {
        link.classList.toggle("link-active");
      }
    }
    if (solutionsSubItems?.classList.contains("hidden")) {
      solutionsSubItems.classList.remove("hidden");
      solutionsSubItems.classList.add("block");
    } else {
      solutionsSubItems?.classList.add("hidden");
      solutionsSubItems?.classList.remove("block");
    }
  });

  for (var index = 0; index < links.length; index++) {
    links[index].style.transitionDelay = index * 100 + "ms";
  }
</script>

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
  </head>
  <body class="bg-[#2C2E3A]">
    <header class="max-w-5xl mx-auto px-6">
      <div class="flex justify-between items-center">
        <a href="/">
          <img
            src="/logo.webp"
            alt="CryptoDisplay Logo"
            width="200"
            height="52"
          />
        </a>

        <div class="hidden md:flex items-center gap-6">
          {
            paths.map((path) => (
              <a href={path.link} class="hover-animation p-2">
                {path.name}
              </a>
            ))
          }
          <div class="hidden md:block">
            <a href="/invite">
              <BaseButton text="Invite Bot" />
            </a>
          </div>
        </div>

        <div class="w-8 md:hidden">
          <button id="burger-menu-button" aria-label="Nav menu"
            ><Fragment set:html={Bars} /></button
          >
        </div>
      </div>
      <div
        id="dropdown"
        class="fixed top-0 right-0 bg-secondary w-full z-50 h-full translate-x-full transition-all duration-500 ease-in-out"
      >
        <div class="mb-4 px-6 pt-6 flex items-center justify-between">
          <img
            src="/logo.webp"
            alt="CryptoDisplay Logo"
            width="200"
            height="52"
          />
          <button
            class="bg-primary w-16 h-16 rounded-full text-white grid place-content-center ml-auto"
            id="close-dropdown-button"
          >
            <span class="block text-2xl font-extralight">✕</span>
          </button>
        </div>
        <h2 class="opacity-60 text-xs uppercase mt-10 ml-6">Navigation</h2>
        <div class="h-[1px] w-full bg-gray-500 mt-4"></div>
        <div class="px-6">
          {
            paths.map((path, index) =>
              path.subpaths ? (
                <div class="text-3xl block font-bold" id="solutions">
                  <button
                    class="flex justify-between items-center w-full py-4 transition-transform duration-500 ease-in-out delay-100 translate-x-full link link--dropdown"
                    id="solutions-sub"
                  >
                    <span>{path.name}</span>
                  </button>
                  <div class="hidden" id="solutions-sub-items">
                    {path.subpaths.map((subpath) =>
                      subpath.description ? (
                        <a
                          class="py-3 px-4 text-xl block font-light"
                          href={subpath.link}
                        >
                          {subpath.name}
                        </a>
                      ) : null
                    )}
                  </div>
                </div>
              ) : (
                <a
                  class="py-4 text-3xl block transition-transform duration-500 ease-in-out translate-x-full link font-bold"
                  class:list={[
                    {
                      "text-primary":
                        path.link !== "/" &&
                        Astro.url.pathname.includes(path.link),
                    },
                    {
                      "text-primary":
                        Astro.url.pathname === "/" && path.link === "/",
                    },
                  ]}
                  id={path.name}
                  href={path.link}
                >
                  {path.name}
                </a>
              )
            )
          }
        </div>
      </div>
    </header>
  </body>
  <main class="min-h-screen">
    <slot />
  </main>
  <footer class="bg-secondary mt-16">
    <div
      class="flex flex-col gap-6 justify-between max-w-5xl mx-auto px-6 py-12 sm:flex-row"
    >
      <div class="flex flex-col justify-center gap-6 lg:flex-row">
        <div class="flex flex-col">
          <p class="mb-2 text-xl font-bold">Pages</p>
          <a href="/" class="opacity-60 hover:opacity-100 transition-opacity"
            >Home</a
          >
        </div>
      </div>
    </div>
    <div class="bg-secondary min-w-screen p-5 text-black">
      <div class="max-w-5xl mx-auto flex items-center">
        <img
          src="/developer.webp"
          alt="Tim Witzdam"
          width="50"
          height="50"
          class="w-10 mr-4 rounded-full"
        />
        <p class="text-sm opacity-60">
          © 2023 Tim Witzdam. All rights reserved.
        </p>
      </div>
    </div>
  </footer>
</html>

<style is:global>
  html {
    scroll-behavior: smooth;
  }

  * {
    font-family: "Inter", sans-serif;
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    -webkit-font-smoothing: antialiased;
    color: white;
  }
</style>

<style>
  .hover-animation {
    position: relative;
  }
  .hover-animation::before {
    content: "";
    position: absolute;
    width: 100%;
    height: 4px;
    border-radius: 2px;
    background-color: #605ceb;
    bottom: 2px;
    left: 0;
    transform-origin: right;
    transform: scaleX(0);
    transition: transform 0.3s ease-in-out;
  }

  .hover-animation:hover::before {
    transform-origin: left;
    transform: scaleX(1);
  }
  .link--dropdown::after,
  .link--dropdown::before {
    content: "";
    display: block;
    position: absolute;
    width: 8px;
    height: 2px;
    border-radius: 1px;
    top: 50%;
    right: 0;
    background: white;
    transition: all 0.3s ease;
  }
  .link--dropdown::before {
    margin-right: 4px;
    transform: scale(0.96, 0.8) rotate(50deg);
  }
  .link--dropdown::after {
    transform: scale(0.96, 0.8) rotate(-50deg);
  }
  .link-active::before {
    transform: scale(0.96, 0.8) rotate(-50deg);
  }
  .link-active::after {
    transform: scale(0.96, 0.8) rotate(50deg);
  }
</style>
